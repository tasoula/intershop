plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.openapi.generator" version "7.12.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/api-spec.yaml")
    outputDir.set("$projectDir/build/generated")
    ignoreFileOverride.set(".openapi-generator-java-sources.ignore")
    modelPackage.set("io.github.tasoula.server.domain")
    invokerPackage.set("io.github.tasoula.server")
    apiPackage.set("io.github.tasoula.server.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            //requestMappingMode: "controller", //переделать на RestController
            interfaceOnly: "false",
            library: "spring-boot",
            reactive: "true",
            useSpringBoot3: "true",
            useJakartaEe: "true",
            useTags: "true",
            dateLibrary: "java8",
            openApiNullable: "false",
            serializableModel: "true",
            returnSuccessCode: "true"
    ])
}

sourceSets.main.java.srcDir "$projectDir/build/generated/src/main/java"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.3'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    // dependsOn([tasks.openApiGenerate, tasks.buildClient]) - вот так, если нужно опираться на обе задачи
    dependsOn(tasks.openApiGenerate)
}


services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${INTERSHOP_DB_USERNAME}
      POSTGRES_PASSWORD: ${INTERSHOP_DB_PASSWORD}
      POSTGRES_DB: ${INTERSHOP_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  payment-db:
    image: postgres:16-alpine
    container_name: payment-postgres
    environment:
      POSTGRES_USER: ${PAYMENT_SERVICE_DB_USERNAME}
      POSTGRES_PASSWORD: ${PAYMENT_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${PAYMENT_SERVICE_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis-server:
    image: redis:7.4.2-bookworm
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    ports:
      - "8082:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import # Используйте относительный путь для docker-compose
    command: [ "start-dev", "--import-realm" ]
    networks:
      - mynetwork
    healthcheck: # Добавляем проверку работоспособности
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "8081:8081"
    depends_on:
      - payment-db
      - keycloak
    environment:
      PAYMENT_SERVICE_DB_USERNAME: ${PAYMENT_SERVICE_DB_USERNAME}
      PAYMENT_SERVICE_DB_PASSWORD: ${PAYMENT_SERVICE_DB_PASSWORD}
      PAYMENT_SERVICE_DB_URL: r2dbc:postgresql://payment-postgres:5432/${PAYMENT_SERVICE_DB_NAME}
    networks:
      - mynetwork

  app:
    build: ./store
    container_name: intershop-app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis-server
      - payment-service
      - keycloak # Добавляем зависимость от keycloak
    environment:
      INTERSHOP_DB_URL: r2dbc:postgresql://db:5432/${INTERSHOP_DB_NAME}
      INTERSHOP_DB_USERNAME: ${INTERSHOP_DB_USERNAME}
      INTERSHOP_DB_PASSWORD: ${INTERSHOP_DB_PASSWORD}
      REDIS_HOST: redis-server
      PAYMENT_SERVICE_HOST: payment-service
      UPLOAD_IMAGES_DIR: /app/images
    networks:
      - mynetwork
    volumes:
      - ./${UPLOAD_IMAGES_DIR}:/app/images



volumes:
  db_data:
  upload_data:
  payment_db_data:

networks:
  mynetwork: